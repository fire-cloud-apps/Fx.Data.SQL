
name: SQL Data Library Nuget Package Actions

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
  
    strategy:
        matrix:
          configuration: [Release]
  
    runs-on: windows-latest
  
    env:
      Solution_Name: src/Fx.Data.SQL.sln                       # Replace with your solution name, i.e. MyWpfApp.sln.
      


# Here comes the execution steps
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x      
        source-url: https://nuget.pkg.github.com/<organization>/index.json
      env:
          NUGET_AUTH_TOKEN: oy2byesmvbhxobkl6quqhjdpyovsndyujeqxt2g6aonq6q    

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2
      
    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Build solution and generate NuGet package
      run: |  
        cd src
        dotnet pack -c Release -o out  
        
    - name: Push generated package to Nuget
      run: dotnet nuget push ./src/out/*.nupkg --skip-duplicate --no-symbols true

    # Upload the MSIX package: https://github.com/marketplace/actions/upload-a-build-artifact
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: MSIX Package
        path: ${{ env.Wap_Project_Directory }}\AppPackages
    
